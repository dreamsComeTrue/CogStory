//--------------------------------------------------------------------------------------------------

void AddParticles (int actorName)
{
    Actor@ tile = GetActor (actorName);
    ParticleEmitterComponent@ particles = tile.GetParticleEmitterComponent ("PARTICLES");

    particles.CreateEmitter ("particles", "smog_particles", 10, 0.5f);
    Color fadeColor (255, 255, 255, 0);
    particles.GetEmitter ().SetColorTransition (COLOR_WHITE, fadeColor);
    float xSpread = 0.12f;
    particles.GetEmitter ().SetVelocityVariance (Point (-xSpread, 0.3f), Point (xSpread, 0.3f));
    float partLife = 1.5f;
    particles.GetEmitter ().SetParticleLifeVariance (partLife, partLife);
    Point pos = particles.GetEmitter ().GetPosition ();
    particles.GetEmitter ().SetPosition (pos.X + tile.Bounds.GetHalfSize ().Width, pos.Y - 5);
    particles.GetEmitter ().Initialize ();
}

//--------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------

funcdef void CameraTweenFinish(int id);

class FinishFunction
{
    int TweenID;
    CameraTweenFinish@ FinishFunc;
}

array<FinishFunction> finishFuncs;
dictionary g_TimesDictionary = 
{
    {'CitySceneAnimationTime', 2000},
    {'CityFactorySceneAnimationTime1', 2000},
    {'CityFactorySceneAnimationTime2', 500},
    {'FactoryMainSceneAnimation1', 1000},
    {'FactoryMainSceneAnimation2', 1000}
};

//--------------------------------------------------------------------------------------------------

int GetAnimTime (string id)
{
    return int(g_TimesDictionary[id]);
}

//--------------------------------------------------------------------------------------------------

void CreateCameraToFlagPointTween (string flagPoint, string timeKey, CameraTweenFinish@ finishFunc)
{
    int tweenID = AddTween (GetDummyActor ().GetPosition (), GetFlagPoint (flagPoint).Pos, GetAnimTime (timeKey), function (id, progress, value)
    {
        GetDummyActor ().SetPosition (value);
        return false;
    }, function (id) 
    {
        for (uint i = 0; i < finishFuncs.length(); ++i)
        {
            if (finishFuncs[i].TweenID == id)
            {
                finishFuncs[i].FinishFunc (id);
                return;
            }
        }
    });
    
    FinishFunction func;
    func.TweenID = tweenID;
    @func.FinishFunc = @finishFunc;
    
    finishFuncs.insertLast (func);
}

//--------------------------------------------------------------------------------------------------